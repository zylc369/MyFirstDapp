{"ast":null,"code":"var _s = $RefreshSig$();\n// import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport newPetrolContract from \".//blockchain/petrolContract\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [petrolContract, setPetrolContract] = useState(null);\n  const [myDeposit, setMyDeposit] = useState(null);\n  const [buyCount, setBuyCount] = useState();\n  const getMyDeposit = async () => {\n    const depositCount = await petrolContract.methods.myDeposit().call({\n      from: address\n    });\n    console.log(\"myDeposit is :\", depositCount);\n    setMyDeposit(\"\" + depositCount);\n  };\n  const newNumber = event => {\n    setBuyCount(event.target.value);\n  };\n  const deposit = async () => {\n    await petrolContract.methods.deposit(buyCount).send({\n      from: address,\n      value: buyCount\n    });\n  };\n  const withdraw = async () => {\n    await petrolContract.methods.withdraw().send({\n      from: address\n    });\n  };\n  const connectWallet = async () => {\n    // 请求链接钱包\n    const account = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    // 抓取web3文件\n    const web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    // 抓取钱包账号地址\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n    setAddress(accounts[0]);\n\n    // 抓取智能合约\n    const pt = newPetrolContract(web3);\n    setPetrolContract(pt);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(App, \"m4jGzioc/WmwmRunpQ80dnFOT0Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Web3","newPetrolContract","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","web3","setWeb3","address","setAddress","petrolContract","setPetrolContract","myDeposit","setMyDeposit","buyCount","setBuyCount","getMyDeposit","depositCount","methods","call","from","console","log","newNumber","event","target","value","deposit","send","withdraw","connectWallet","account","window","ethereum","request","method","accounts","eth","getAccounts","pt","_c","$RefreshReg$"],"sources":["D:/Web3WorkSpace/petrolexchange/src/App.js"],"sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport newPetrolContract from \".//blockchain/petrolContract\";\n\nfunction App() {\n\n  const [web3,setWeb3] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [petrolContract, setPetrolContract] = useState(null);\n  const [myDeposit, setMyDeposit] = useState(null);\n  const [buyCount, setBuyCount] = useState();\n\n  \n\n  const getMyDeposit = async() => {\n    const depositCount = await petrolContract.methods.myDeposit().call({\n      from : address\n    });\n    console.log(\"myDeposit is :\", depositCount);\n    setMyDeposit(\"\"+depositCount);\n  };\n\n  const newNumber = (event) => {\n    setBuyCount(event.target.value);\n  };\n\n  const deposit = async() => {\n    await petrolContract.methods.deposit(buyCount).send({\n      from : address,\n      value : buyCount\n    });\n  };\n\n  const withdraw = async() => {\n    await petrolContract.methods.withdraw().send({\n      from : address\n    });\n    \n  };\n  const connectWallet = async() => {\n    // 请求链接钱包\n    const account = await window.ethereum.request({\n      method:'eth_requestAccounts'\n    });\n    // 抓取web3文件\n    const web3 = new Web3(window.ethereum);\n    setWeb3(web3);\n    // 抓取钱包账号地址\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts[0]);\n    setAddress(accounts[0]);\n\n    // 抓取智能合约\n    const pt = newPetrolContract(web3);\n    setPetrolContract(pt);\n  };\n\n  return (\n    \n    <></>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,iBAAiB,MAAM,8BAA8B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC;EAI1C,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAW;IAC9B,MAAMC,YAAY,GAAG,MAAMP,cAAc,CAACQ,OAAO,CAACN,SAAS,CAAC,CAAC,CAACO,IAAI,CAAC;MACjEC,IAAI,EAAGZ;IACT,CAAC,CAAC;IACFa,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,YAAY,CAAC;IAC3CJ,YAAY,CAAC,EAAE,GAACI,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMM,SAAS,GAAIC,KAAK,IAAK;IAC3BT,WAAW,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAW;IACzB,MAAMjB,cAAc,CAACQ,OAAO,CAACS,OAAO,CAACb,QAAQ,CAAC,CAACc,IAAI,CAAC;MAClDR,IAAI,EAAGZ,OAAO;MACdkB,KAAK,EAAGZ;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAW;IAC1B,MAAMnB,cAAc,CAACQ,OAAO,CAACW,QAAQ,CAAC,CAAC,CAACD,IAAI,CAAC;MAC3CR,IAAI,EAAGZ;IACT,CAAC,CAAC;EAEJ,CAAC;EACD,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAW;IAC/B;IACA,MAAMC,OAAO,GAAG,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAC5CC,MAAM,EAAC;IACT,CAAC,CAAC;IACF;IACA,MAAM7B,IAAI,GAAG,IAAIR,IAAI,CAACkC,MAAM,CAACC,QAAQ,CAAC;IACtC1B,OAAO,CAACD,IAAI,CAAC;IACb;IACA,MAAM8B,QAAQ,GAAG,MAAM9B,IAAI,CAAC+B,GAAG,CAACC,WAAW,CAAC,CAAC;IAC7CjB,OAAO,CAACC,GAAG,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC;IACxB3B,UAAU,CAAC2B,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAEvB;IACA,MAAMG,EAAE,GAAGxC,iBAAiB,CAACO,IAAI,CAAC;IAClCK,iBAAiB,CAAC4B,EAAE,CAAC;EACvB,CAAC;EAED,oBAEEpC,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAET;AAACI,EAAA,CAzDQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}